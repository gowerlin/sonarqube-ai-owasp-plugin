{
    "version": "2.0.0",
    "tasks": [
        // ============================================================
        // 主要建置與部署任務
        // ============================================================
        {
            "label": "🚀 Build & Deploy to SonarQube",
            "type": "shell",
            "command": "pwsh",
            "args": [
                "-File",
                "${workspaceFolder}/.vscode/scripts/build-and-deploy.ps1"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "presentation": {
                "reveal": "always",
                "panel": "dedicated",
                "echo": true,
                "focus": true,
                "clear": true
            },
            "problemMatcher": [
                "$maven"
            ]
        },
        {
            "label": "🔨 Quick Build (Skip Tests)",
            "type": "shell",
            "command": "pwsh",
            "args": [
                "-Command",
                "Write-Host '📦 快速建置（跳過測試）...' -ForegroundColor Cyan; mvn clean package -DskipTests -q; if ($LASTEXITCODE -eq 0) { Write-Host '✅ 建置成功' -ForegroundColor Green } else { Write-Host '❌ 建置失敗' -ForegroundColor Red; exit $LASTEXITCODE }"
            ],
            "group": "build",
            "presentation": {
                "reveal": "always",
                "panel": "shared",
                "echo": true,
                "focus": false
            },
            "problemMatcher": [
                "$maven"
            ]
        },
        {
            "label": "🏗️ Full Build (With Tests)",
            "type": "shell",
            "command": "pwsh",
            "args": [
                "-Command",
                "Write-Host '📦 完整建置（含測試）...' -ForegroundColor Cyan; mvn clean package; if ($LASTEXITCODE -eq 0) { Write-Host '✅ 建置成功' -ForegroundColor Green } else { Write-Host '❌ 建置失敗' -ForegroundColor Red; exit $LASTEXITCODE }"
            ],
            "group": "build",
            "presentation": {
                "reveal": "always",
                "panel": "shared",
                "echo": true,
                "focus": false
            },
            "problemMatcher": [
                "$maven"
            ]
        },
        {
            "label": "📦 Deploy Plugin Only",
            "type": "shell",
            "command": "pwsh",
            "args": [
                "-Command",
                "$pluginJar = Get-ChildItem -Path '${workspaceFolder}/plugin-core/target' -Filter 'sonar-aiowasp-plugin-*.jar' -ErrorAction SilentlyContinue | Select-Object -First 1; if ($pluginJar) { Write-Host '📥 複製插件至 SonarQube...' -ForegroundColor Green; $dest = 'E:/sonarqube-community-25.10.0.114319/extensions/plugins/'; if (-not (Test-Path $dest)) { New-Item -ItemType Directory -Path $dest -Force | Out-Null }; Copy-Item -Path $pluginJar.FullName -Destination $dest -Force; Write-Host '✅ 部署完成！' -ForegroundColor Green; Write-Host \"部署檔案: $($pluginJar.Name)\" -ForegroundColor Cyan; Write-Host '⚠️  請重啟 SonarQube 以載入插件' -ForegroundColor Yellow } else { Write-Host '❌ 找不到插件 JAR 檔案，請先執行建置' -ForegroundColor Red; exit 1 }"
            ],
            "presentation": {
                "reveal": "always",
                "panel": "shared",
                "echo": true,
                "focus": false
            },
            "problemMatcher": []
        },
        {
            "label": "⚡ Incremental Build",
            "type": "shell",
            "command": "pwsh",
            "args": [
                "-Command",
                "Write-Host '⚡ 增量建置（不清理）...' -ForegroundColor Cyan; mvn package -DskipTests -q; if ($LASTEXITCODE -eq 0) { Write-Host '✅ 建置成功' -ForegroundColor Green } else { Write-Host '❌ 建置失敗' -ForegroundColor Red; exit $LASTEXITCODE }"
            ],
            "group": "build",
            "presentation": {
                "reveal": "always",
                "panel": "shared",
                "echo": true,
                "focus": false
            },
            "problemMatcher": [
                "$maven"
            ]
        },
        // ============================================================
        // 測試相關任務
        // ============================================================
        {
            "label": "🧪 Run All Tests",
            "type": "shell",
            "command": "pwsh",
            "args": [
                "-Command",
                "Write-Host '🧪 執行所有測試...' -ForegroundColor Cyan; mvn test; if ($LASTEXITCODE -eq 0) { Write-Host '✅ 測試通過' -ForegroundColor Green } else { Write-Host '❌ 測試失敗' -ForegroundColor Red; exit $LASTEXITCODE }"
            ],
            "group": "test",
            "presentation": {
                "reveal": "always",
                "panel": "dedicated",
                "echo": true,
                "focus": true
            },
            "problemMatcher": [
                "$maven"
            ]
        },
        {
            "label": "🎯 Run Specific Test",
            "type": "shell",
            "command": "pwsh",
            "args": [
                "-Command",
                "$testClass = Read-Host '請輸入測試類別名稱（例如：RuleEngineTest）'; if ($testClass) { Write-Host \"🧪 執行測試: $testClass\" -ForegroundColor Cyan; mvn test -Dtest=$testClass; if ($LASTEXITCODE -eq 0) { Write-Host '✅ 測試通過' -ForegroundColor Green } else { Write-Host '❌ 測試失敗' -ForegroundColor Red } } else { Write-Host '❌ 未指定測試類別' -ForegroundColor Red }"
            ],
            "group": "test",
            "presentation": {
                "reveal": "always",
                "panel": "shared",
                "echo": true,
                "focus": true
            },
            "problemMatcher": [
                "$maven"
            ]
        },
        {
            "label": "📊 Coverage Report",
            "type": "shell",
            "command": "pwsh",
            "args": [
                "-Command",
                "Write-Host '📊 產生測試涵蓋率報告...' -ForegroundColor Cyan; mvn jacoco:report; if ($LASTEXITCODE -eq 0) { Write-Host '✅ 報告產生完成' -ForegroundColor Green; $reportPath = '${workspaceFolder}/plugin-core/target/site/jacoco/index.html'; if (Test-Path $reportPath) { Write-Host '📂 開啟報告...' -ForegroundColor Cyan; Start-Process $reportPath } else { Write-Host '⚠️  報告檔案不存在，請先執行測試' -ForegroundColor Yellow } } else { Write-Host '❌ 報告產生失敗' -ForegroundColor Red; exit $LASTEXITCODE }"
            ],
            "presentation": {
                "reveal": "always",
                "panel": "shared",
                "echo": true,
                "focus": false
            },
            "problemMatcher": []
        },
        // ============================================================
        // SonarQube 服務管理
        // ============================================================
        {
            "label": "🚀 Start SonarQube",
            "type": "shell",
            "command": "pwsh",
            "args": [
                "-Command",
                "Write-Host '🚀 啟動 SonarQube 開發環境...' -ForegroundColor Cyan; if (Test-Path '${workspaceFolder}/docker-compose.yml') { docker-compose up -d; Start-Sleep -Seconds 5; Write-Host '✅ SonarQube 正在啟動' -ForegroundColor Green; Write-Host '   訪問地址: http://localhost:9000' -ForegroundColor Cyan; Write-Host '   預設帳號: admin / admin' -ForegroundColor Yellow; Write-Host '   啟動時間: 約 30-60 秒' -ForegroundColor Gray } else { Write-Host '❌ 找不到 docker-compose.yml' -ForegroundColor Red }"
            ],
            "presentation": {
                "reveal": "always",
                "panel": "shared",
                "echo": true,
                "focus": false
            },
            "problemMatcher": []
        },
        {
            "label": "🛑 Stop SonarQube",
            "type": "shell",
            "command": "pwsh",
            "args": [
                "-Command",
                "Write-Host '🛑 停止 SonarQube...' -ForegroundColor Yellow; if (Test-Path '${workspaceFolder}/docker-compose.yml') { docker-compose down; Write-Host '✅ SonarQube 已停止' -ForegroundColor Green } else { Write-Host '❌ 找不到 docker-compose.yml' -ForegroundColor Red }"
            ],
            "presentation": {
                "reveal": "always",
                "panel": "shared",
                "echo": true,
                "focus": false
            },
            "problemMatcher": []
        },
        {
            "label": "🔄 Restart SonarQube",
            "type": "shell",
            "command": "pwsh",
            "args": [
                "-Command",
                "Write-Host '🔄 重啟 SonarQube...' -ForegroundColor Cyan; if (Test-Path '${workspaceFolder}/docker-compose.yml') { docker-compose restart sonarqube; Write-Host '⏳ 等待 SonarQube 啟動...' -ForegroundColor Yellow; Start-Sleep -Seconds 10; Write-Host '✅ SonarQube 已重啟' -ForegroundColor Green; Write-Host '   訪問地址: http://localhost:9000' -ForegroundColor Cyan } else { Write-Host '❌ 找不到 docker-compose.yml' -ForegroundColor Red }"
            ],
            "presentation": {
                "reveal": "always",
                "panel": "shared",
                "echo": true,
                "focus": false
            },
            "problemMatcher": []
        },
        {
            "label": "📋 View SonarQube Logs",
            "type": "shell",
            "command": "pwsh",
            "args": [
                "-Command",
                "Write-Host '📋 顯示 SonarQube 日誌...' -ForegroundColor Cyan; Write-Host '按 Ctrl+C 停止日誌顯示' -ForegroundColor Yellow; docker-compose logs -f sonarqube"
            ],
            "isBackground": true,
            "presentation": {
                "reveal": "always",
                "panel": "dedicated",
                "echo": true,
                "focus": true
            },
            "problemMatcher": []
        },
        {
            "label": "🌐 Open SonarQube",
            "type": "shell",
            "command": "pwsh",
            "args": [
                "-Command",
                "Write-Host '🌐 開啟 SonarQube 網頁介面...' -ForegroundColor Cyan; Start-Process 'http://localhost:9000'"
            ],
            "presentation": {
                "reveal": "silent",
                "panel": "shared"
            },
            "problemMatcher": []
        },
        // ============================================================
        // 清理與維護
        // ============================================================
        {
            "label": "🧹 Clean All",
            "type": "shell",
            "command": "pwsh",
            "args": [
                "-Command",
                "Write-Host '🧹 清理所有建構產物...' -ForegroundColor Yellow; mvn clean; if ($LASTEXITCODE -eq 0) { Write-Host '✅ 清理完成' -ForegroundColor Green } else { Write-Host '❌ 清理失敗' -ForegroundColor Red; exit $LASTEXITCODE }"
            ],
            "presentation": {
                "reveal": "always",
                "panel": "shared",
                "echo": true,
                "focus": false
            },
            "problemMatcher": []
        },
        {
            "label": "🗑️ Clean Old Plugins",
            "type": "shell",
            "command": "pwsh",
            "args": [
                "-File",
                "${workspaceFolder}/.vscode/scripts/clean-plugins.ps1"
            ],
            "presentation": {
                "reveal": "always",
                "panel": "shared",
                "echo": true,
                "focus": false
            },
            "problemMatcher": []
        },
        {
            "label": "🔄 Update Dependencies",
            "type": "shell",
            "command": "pwsh",
            "args": [
                "-Command",
                "Write-Host '🔄 更新 Maven 依賴...' -ForegroundColor Cyan; mvn versions:display-dependency-updates; Write-Host ''; Write-Host '💡 提示：執行以下命令更新依賴' -ForegroundColor Yellow; Write-Host '   mvn versions:use-latest-releases' -ForegroundColor Cyan"
            ],
            "presentation": {
                "reveal": "always",
                "panel": "shared",
                "echo": true,
                "focus": false
            },
            "problemMatcher": []
        },
        // ============================================================
        // 開發工具
        // ============================================================
        {
            "label": "🔍 Check Environment",
            "type": "shell",
            "command": "pwsh",
            "args": [
                "-Command",
                "Write-Host ''; Write-Host '============================================================' -ForegroundColor Cyan; Write-Host '  開發環境檢查' -ForegroundColor Cyan; Write-Host '============================================================' -ForegroundColor Cyan; Write-Host ''; Write-Host '📦 Maven 版本：' -ForegroundColor Yellow; mvn --version; Write-Host ''; Write-Host '☕ Java 版本：' -ForegroundColor Yellow; java -version; Write-Host ''; Write-Host '💻 PowerShell 版本：' -ForegroundColor Yellow; $PSVersionTable.PSVersion; Write-Host ''; Write-Host '🐳 Docker 版本（SonarQube 用）：' -ForegroundColor Yellow; docker --version; Write-Host ''; Write-Host '🔧 Docker Compose 版本（SonarQube 用）：' -ForegroundColor Yellow; docker-compose --version; Write-Host ''; Write-Host '📂 專案路徑：' -ForegroundColor Yellow; Write-Host '   ${workspaceFolder}' -ForegroundColor Gray; Write-Host ''; Write-Host '🔌 SonarQube 插件目錄：' -ForegroundColor Yellow; $pluginDir = 'E:/sonarqube-community-25.10.0.114319/extensions/plugins'; if (Test-Path $pluginDir) { Write-Host \"   $pluginDir\" -ForegroundColor Green; $plugins = Get-ChildItem -Path $pluginDir -Filter 'sonar-aiowasp-plugin-*.jar'; if ($plugins) { Write-Host \"   已安裝插件: $($plugins.Name)\" -ForegroundColor Cyan } else { Write-Host '   尚未部署插件' -ForegroundColor Yellow } } else { Write-Host \"   目錄不存在: $pluginDir\" -ForegroundColor Red }; Write-Host ''; Write-Host '============================================================' -ForegroundColor Green; Write-Host '  ✅ 環境檢查完成' -ForegroundColor Green; Write-Host '============================================================' -ForegroundColor Green; Write-Host ''"
            ],
            "presentation": {
                "reveal": "always",
                "panel": "dedicated",
                "echo": true,
                "focus": true,
                "clear": true
            },
            "problemMatcher": []
        },
        {
            "label": "📊 Project Info",
            "type": "shell",
            "command": "pwsh",
            "args": [
                "-Command",
                "Write-Host ''; Write-Host '============================================================' -ForegroundColor Cyan; Write-Host '  專案資訊' -ForegroundColor Cyan; Write-Host '============================================================' -ForegroundColor Cyan; Write-Host ''; mvn help:effective-pom -Doutput=pom-effective.xml -q; $pom = [xml](Get-Content pom.xml); Write-Host '📦 專案名稱: ' -NoNewline -ForegroundColor Yellow; Write-Host $pom.project.name -ForegroundColor White; Write-Host '🔖 版本號: ' -NoNewline -ForegroundColor Yellow; Write-Host $pom.project.version -ForegroundColor White; Write-Host '🏢 組織: ' -NoNewline -ForegroundColor Yellow; Write-Host $pom.project.groupId -ForegroundColor White; Write-Host '📝 描述: ' -NoNewline -ForegroundColor Yellow; Write-Host $pom.project.description -ForegroundColor White; Write-Host ''; Write-Host '📚 模組列表:' -ForegroundColor Yellow; Get-ChildItem -Directory | Where-Object { Test-Path (Join-Path $_.FullName 'pom.xml') } | ForEach-Object { Write-Host \"   - $($_.Name)\" -ForegroundColor Cyan }; Write-Host ''; Write-Host '============================================================' -ForegroundColor Green; Write-Host ''"
            ],
            "presentation": {
                "reveal": "always",
                "panel": "dedicated",
                "echo": true,
                "focus": true
            },
            "problemMatcher": []
        },
        {
            "label": "🔧 Validate POM",
            "type": "shell",
            "command": "pwsh",
            "args": [
                "-Command",
                "Write-Host '🔧 驗證 POM 檔案...' -ForegroundColor Cyan; mvn validate; if ($LASTEXITCODE -eq 0) { Write-Host '✅ POM 驗證通過' -ForegroundColor Green } else { Write-Host '❌ POM 驗證失敗' -ForegroundColor Red; exit $LASTEXITCODE }"
            ],
            "presentation": {
                "reveal": "always",
                "panel": "shared",
                "echo": true,
                "focus": false
            },
            "problemMatcher": [
                "$maven"
            ]
        },
        {
            "label": "📦 Install to Local Repository",
            "type": "shell",
            "command": "pwsh",
            "args": [
                "-Command",
                "Write-Host '📦 安裝至本機 Maven 倉庫...' -ForegroundColor Cyan; mvn clean install -DskipTests; if ($LASTEXITCODE -eq 0) { Write-Host '✅ 安裝完成' -ForegroundColor Green; Write-Host '   本機倉庫: %USERPROFILE%\\.m2\\repository' -ForegroundColor Cyan } else { Write-Host '❌ 安裝失敗' -ForegroundColor Red; exit $LASTEXITCODE }"
            ],
            "presentation": {
                "reveal": "always",
                "panel": "shared",
                "echo": true,
                "focus": false
            },
            "problemMatcher": [
                "$maven"
            ]
        }
    ]
}
